[tool.poetry]
name = "pynotionclient"
version = "0.0.9-dev2"
description = "Python wrapper for Notion API"
authors = ["Vetrichelvan <pythonhubdev@gmail.com>"]
license = "MIT"
readme = "README.md"
keywords = ["notion", "api", "wrapper", "pynotion", "notion-sdk", "notion-client"]
packages = [{ include = "pynotionclient"}]
repository = "https://github.com/quantivio/PyNotion"
homepage = "https://github.com/quantivio/PyNotion"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = "^3.12"
pydantic-settings = "^2.3.4"
pydantic = { extras = ["dotenv"], version = "^2.7.4" }
requests = "^2.32.3"

[tool.poetry.group.development.dependencies]
pre-commit = "^3.7.1"
black = { extras = ["d"], version = "^24.4.2" }
ruff = "^0.5.0"
pytest = { extras = ["asyncio"], version = "^8.2.2" }
mypy = "^1.10.1"
pytest-cov = "^5.0.0"
isort = "^5.13.2"
types-requests = "^2.32.0.20240622"


[tool.black]
line-length = 120
preview = true

[tool.ruff]
src = ["."]
target-version = "py312"
fix = true
output-format = "full"
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "N801", "N802", "N803", "N805", "N806", "Q0"]
ignore = ["F401"]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"
multiline-quotes = "double"
docstring-quotes = "double"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.isort]
combine-as-imports = true
force-single-line = false
force-wrap-aliases = true
split-on-trailing-comma = true

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["pynotionclient"]
line_length = 120
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true

[pytest]
asyncio_mode = "auto"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/quantivio/PyNotion/issues"
