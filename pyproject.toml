[tool.poetry]
name = "pynotionclient"
version = "0.0.9-dev2"
description = "Python wrapper for Notion API"
authors = ["Vetrichelvan <pythonhub.py@gmail.com>"]
license = "MIT"
readme = "README.md"
keywords = ["notion", "api", "wrapper"]
packages = [{ include = "pynotionclient", from = "src" }]
repository = "https://github.com/quantivio/PyNotion"
homepage = "https://github.com/quantivio/PyNotion"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = "^3.11"
pydantic-settings = "^2.2.1"
pydantic = { extras = ["dotenv"], version = "^2.6.4" }
requests = "^2.31.0"
bump-pydantic = "^0.8.0"

[tool.poetry.group.development.dependencies]
pre-commit = "^3.7.0"
black = { extras = ["d"], version = "^24.3.0" }
ruff = "^0.3.5"
pytest = { extras = ["asyncio"], version = "^8.1.1" }
mypy = "^1.9.0"
pytest-cov = "^5.0.0"
isort = "^5.13.2"

[tool.black]
line-length = 120
preview = true

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["src", ]

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true

[tool.ruff]
src = ["."]
target-version = "py311"
fix = true
output-format = "full"
line-length = 120

[tool.lint.flake8-quotes]
inline-quotes = "double"
multiline-quotes = "double"
docstring-quotes = "double"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.isort]
combine-as-imports = true

[pytest]
asyncio_mode = "auto"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/quantivio/PyNotion/issues"
